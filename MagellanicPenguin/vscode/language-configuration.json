{
    "comments": {
        // symbol used for single line comment. Remove this entry if your language does not support line comments
        "lineComment": "//",
        // symbols used for start and end a block comment. Remove this entry if your language does not support block comments
        "blockComment": [
            "/*",
            "*/"
        ]
    },
    // symbols used as brackets
    "brackets": [
        [
            "{",
            "}"
        ],
        [
            "[",
            "]"
        ],
        [
            "(",
            ")"
        ],
        [
            "<",
            ">"
        ]
    ],
    // symbols that are auto closed when typing
    "autoClosingPairs": [
        [
            "{",
            "}"
        ],
        [
            "[",
            "]"
        ],
        [
            "(",
            ")"
        ],
        [
            "\"",
            "\""
        ],
        [
            "'",
            "'"
        ],
        [
            "<",
            ">"
        ]
    ],
    // symbols that can be used to surround a selection
    "surroundingPairs": [
        [
            "{",
            "}"
        ],
        [
            "[",
            "]"
        ],
        [
            "(",
            ")"
        ],
        [
            "\"",
            "\""
        ],
        [
            "'",
            "'"
        ],
        [
            "<",
            ">"
        ]
    ],
    "folding": {
        "markers": {
            "start": "^\\s*//\\s*#?region\\b",
            "end": "^\\s*//\\s*#?endregion\\b"
        }
    },
    "wordPattern": "(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\]\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)",
    "indentationRules": {
        "increaseIndentPattern": "{[^}]*$|\\[[^\\]]*$|\\([^)]*$|^\\s*(if|while|for|class|interface|enum|namespace)\\b.*$",
        "decreaseIndentPattern": "^\\s*[}\\]\\)]|^\\s*(else|elif|except|finally)\\b"
    },
    "onEnterRules": [
        {
            "beforeText": "^\\s*(if|while|for|class|interface|enum|namespace)\\b.*$",
            "action": {
                "indent": "indent"
            }
        },
        {
            "beforeText": "^\\s*else\\b.*$",
            "action": {
                "indent": "indent"
            }
        },
        {
            "beforeText": "^\\s*\\}.*$",
            "action": {
                "indent": "outdent"
            }
        }
    ],
    "autoIndent": "brackets",
    "format": {
        "enable": true
    }
}